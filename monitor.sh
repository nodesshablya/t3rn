#!/bin/bash

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export tgApiQn=""
export tgIdQn=""
export address=""

# URL endpoints
brnUrl="https://brn.explorer.caldera.xyz/api?module=account&action=balance&address=${address}"
arbtUrl="https://arbitrum-sepolia.blockscout.com/api?module=account&action=balance&address=${address}"
blssUrl="https://blast-testnet.blockscout.com/api?module=account&action=balance&address=${address}"
bsspUrl="https://base-sepolia.blockscout.com/api?module=account&action=balance&address=${address}"
opspUrl="https://optimism-sepolia.blockscout.com/api?module=account&action=balance&address=${address}"

# URL –¥–ª—è explorer
brnUrlEx="https://brn.explorer.caldera.xyz/address/${address}"
arbtUrlEx="https://arbitrum-sepolia.blockscout.com/address/${address}"
blssUrlEx="https://blast-testnet.blockscout.com/address/${address}"
bsspUrlEx="https://base-sepolia.blockscout.com/address/${address}"
opspUrlEx="https://optimism-sepolia.blockscout.com/address/${address}"

mega=$(echo 10/10^19 | bc -l)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞
msgTg=$(echo -e "<b>[ –ò–ù–§–û ]</b> Telegram –±–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
tgTest=$(curl -s -X POST "https://api.telegram.org/bot${tgApiQn}/sendMessage" -d chat_id="${tgIdQn}" -d text="${msgTg}" -d parse_mode="HTML" | grep 'error_code')
if [ -n "${tgTest}" ]; then
    echo -e "[ –û–®–ò–ë–ö–ê ] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ ID —á–∞—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
function brnFetch() {
    brnBal=$(curl -s $brnUrl | jq -r .result)
    brnBal=$(bc <<< "$brnBal * $mega")
    brnBalRound=$(echo $brnBal | sed "s/\..*//g")
    brnBalFloat=$(echo $brnBal | sed "s/.*[.]//g" | cut -c1-2)
    brnBal=$(echo "$brnBalRound.$brnBalFloat")
}

function arbtFetch() {
    arbtBal=$(curl -s $arbtUrl | jq -r .result)
    arbtBal=$(bc <<< "$arbtBal * $mega")
    arbtBalRound=$(echo $arbtBal | sed "s/\..*//g")
    arbtBalFloat=$(echo $arbtBal | sed "s/.*[.]//g" | cut -c1-2)
    arbtBal=$(echo "$arbtBalRound.$arbtBalFloat")
}

function blssFetch() {
    blssBal=$(curl -s $blssUrl | jq -r .result)
    blssBal=$(bc <<< "$blssBal * $mega")
    blssBalRound=$(echo $blssBal | sed "s/\..*//g")
    blssBalFloat=$(echo $blssBal | sed "s/.*[.]//g" | cut -c1-2)
    blssBal=$(echo "$blssBalRound.$blssBalFloat")
}

function bsspFetch() {
    bsspBal=$(curl -s $bsspUrl | jq -r .result)
    bsspBal=$(bc <<< "$bsspBal * $mega")
    bsspBalRound=$(echo $bsspBal | sed "s/\..*//g")
    bsspBalFloat=$(echo $bsspBal | sed "s/.*[.]//g" | cut -c1-2)
    bsspBal=$(echo "$bsspBalRound.$bsspBalFloat")
}

function opspFetch() {
    opspBal=$(curl -s $opspUrl | jq -r .result)
    opspBal=$(bc <<< "$opspBal * $mega")
    opspBalRound=$(echo $opspBal | sed "s/\..*//g")
    opspBalFloat=$(echo $opspBal | sed "s/.*[.]//g" | cut -c1-2)
    opspBal=$(echo "$opspBalRound.$opspBalFloat")
}

# –ß–∞—Å–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
function recap() {
    while true; do
        echo "[–ò–ù–§–û] –ó–∞–ø—É—Å–∫ —Å–≤–æ–¥–∫–∏ ‚úÖ"
        brnFetch
        arbtFetch
        blssFetch
        bsspFetch
        opspFetch
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞
        raw_total=$(bc <<< "${arbtBal} + ${blssBal} + ${bsspBal} + ${opspBal}")
        raw_total_round=$(echo $raw_total | sed "s/\..*//g")
        raw_total_float=$(echo $raw_total | sed "s/.*[.]//g" | cut -c1-2)
        totalFirstEth="$raw_total_round.$raw_total_float"
        
        echo "[–ò–ù–§–û] –û–±—â–∏–π –±–∞–ª–∞–Ω—Å ETH: ${totalFirstEth} ETH"
        brnFirstBal=${brnBal}
        
        while sleep 3600; do
            ipAddr=$(curl -s https://api.ipify.org)
            status=$(ps aux | grep -c executor)
            
            if [ $status -gt 1 ]; then
                status="‚úÖ –ê–∫—Ç–∏–≤–µ–Ω \\\| –ó–∞–ø—É—â–µ–Ω"
            else
                status="‚ö†Ô∏è –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
            fi
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤
            brnFetch
            arbtFetch
            blssFetch
            bsspFetch
            opspFetch
            
            # –°–Ω–∞—á–∞–ª–∞ —Å—á–∏—Ç–∞–µ–º –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å
            total_eth=$(bc <<< "${arbtBal} + ${blssBal} + ${bsspBal} + ${opspBal}")
            total_eth_round=$(echo $total_eth | sed "s/\..*//g")
            total_eth_float=$(echo $total_eth | sed "s/.*[.]//g" | cut -c1-2)
            total_eth_formatted="$total_eth_round.$total_eth_float"
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Telegram
            brnBal=$(echo $brnBal | sed "s/\./\\\./g")
            arbtBal=$(echo $arbtBal | sed "s/\./\\\./g")
            blssBal=$(echo $blssBal | sed "s/\./\\\./g")
            bsspBal=$(echo $bsspBal | sed "s/\./\\\./g")
            opspBal=$(echo $opspBal | sed "s/\./\\\./g")
            total_eth_formatted=$(echo $total_eth_formatted | sed "s/\./\\\./g")
            
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            recapMsg=$(echo -e "\
üîÑ *–ß–ê–°–û–í–ê–Ø –°–í–û–î–ö–ê* üîÑ\n\
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\
\n\
üñ• *–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n\
‚îî IP: \`${ipAddr}\`\n\
‚îî –°—Ç–∞—Ç—É—Å: ${status}\n\
\n\
üíº *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ*\n\
‚îî –ê–¥—Ä–µ—Å: \`${address}\`\n\
\n\
üí∞ *–ë–∞–ª–∞–Ω—Å—ã ETH*\n\
‚îú Arbitrum: [${arbtBal}](${arbtUrlEx})\n\
‚îú Blast: [${blssBal}](${blssUrlEx})\n\
‚îú Base: [${bsspBal}](${bsspUrlEx})\n\
‚îú Optimism: [${opspBal}](${opspUrlEx})\n\
‚îî *–û–±—â–∏–π –±–∞–ª–∞–Ω—Å:* ${total_eth_formatted} ETH\n\
\n\
üåü *–ë–∞–ª–∞–Ω—Å BRN*\n\
‚îî [${brnBal}](${brnUrlEx})\n\
\n\
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\
ü§ñ Monitor v1\.0")
            
            echo -e "\n[–ò–ù–§–û] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram... ‚è≥"
            curl -s -X POST "https://api.telegram.org/bot${tgApiQn}/sendMessage" \
                -d chat_id="${tgIdQn}" \
                -d text="${recapMsg}" \
                -d parse_mode="MarkdownV2"
            echo -e "[–ò–ù–§–û] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ"
        done
    done
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
function mainProcess() {
    brnFetch
    formatted_brnBal=$(echo $brnBal | sed "s/\./\\\./g")
    msgTg=$(echo -e "–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: _${formatted_brnBal}_")
    
    curl -s -X POST "https://api.telegram.org/bot${tgApiQn}/sendMessage" \
        -d chat_id="${tgIdQn}" \
        -d text="${msgTg}" \
        -d parse_mode="MarkdownV2"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ!)
    oldBal=$brnBal
    
    while true; do
        sleep 300
        brnFetch
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        if (( $(echo "$brnBal > $oldBal" | bc -l) )); then
            difference=$(echo "$brnBal - $oldBal" | bc -l)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–≤–æ–¥–∞
            formatted_brnBal=$(echo $brnBal | sed "s/\./\\\./g")
            formatted_difference=$(echo $difference | sed "s/\./\\\./g")
            
            echo -e "[–ò–ù–§–û] –ë–∞–ª–∞–Ω—Å —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ $difference"
            echo -e "[–ò–ù–§–û] –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: $brnBal"
            
            msgTg=$(echo -e "–ë–∞–ª–∞–Ω—Å —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ *${formatted_difference}*\\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: _${formatted_brnBal}_")
            curl -s -X POST "https://api.telegram.org/bot${tgApiQn}/sendMessage" \
                -d chat_id="${tgIdQn}" \
                -d text="${msgTg}" \
                -d parse_mode="MarkdownV2"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ!)
            oldBal=$brnBal
        else
            echo -e "–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: $brnBal, –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç..."
        fi
    done
}

# –ó–∞–ø—É—Å–∫ –æ–±–æ–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
mainProcess & recap
